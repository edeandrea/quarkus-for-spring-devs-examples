quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=chapter-6-quarkus-rest-debug.127.0.0.1.nip.io

quarkus.kubernetes.env.vars.quarkus-launch-devmode=true

quarkus.package.type=mutable-jar
quarkus.live-reload.password=changeit
quarkus.live-reload.url=http://chapter-6-quarkus-rest-debug.127.0.0.1.nip.io/

quarkus.kubernetes.ports.http.name=http
quarkus.kubernetes.ports.http.host-port=8080
quarkus.kubernetes.ports.http.container-port=8080

#
# Parameters to be used to expose using NodePort
# the application and socket remote ports: 8080, 5005 using
# nodeports: 3000, 31000
# A bug has been reported to the quarkus project to properly generate the NodePort Service
# as this is not the case:
#quarkus.kubernetes.service-type=NodePort
#quarkus.kubernetes.ports.http.node-port=30000
#quarkus.kubernetes.ports.remote.name=http
#quarkus.kubernetes.ports.remote.host-port=5005
#quarkus.kubernetes.ports.remote.container-port=5005
#quarkus.kubernetes.ports.remote.node-port=31000

#
# To use the Remote debugging, just un-comment this property to let dekorate to add the ENV VAR to
# the spec part of the Deployment MANIFEST
#
#quarkus.kubernetes.env.vars.JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:5005

quarkus.container-image.registry=quay.io
quarkus.container-image.group=<group>
quarkus.container-image.name=chapter-6-quarkus-rest-debug
quarkus.container-image.tag=1.0
quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.container-image.username=<USERNAME>
quarkus.container-image.password=<PASSWORD>

